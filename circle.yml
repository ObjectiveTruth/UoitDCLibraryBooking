machine:
  node:
    version: 5.5.0
  environment:
    TERM: "dumb"
    ADB_INSTALL_TIMEOUT: "10"
    GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
  post:
    # Creates a random introspective tunnel to the CircleCI container
    - wget https://s3.amazonaws.com/build-tools-prd/ngrok.zip
    - unzip ngrok.zip
    - ./ngrok -log $CIRCLE_ARTIFACTS/ngrok.log 9292:
        background: true
    # Save the NGROK URL by using the API on the ngrok server and appending the desired callback url
    - NGROK_TUNNEL_URL="$(wget 127.0.0.1:4040/api/tunnels | jq ".tunnels[0].public_url" -r)":9292/reply

dependencies:
  override:
    - npm install:
        pwd:
          device_farm_receive_server
  pre:
    - echo y | android update sdk --no-ui --all --filter tool,extra-android-m2repository,extra-android-support,extra-google-google_play_services,extra-google-m2repository,android-23
    - echo y | android update sdk --no-ui --all --filter "build-tools-23.0.2"

test:
  override:
    # Assemble the AndroidTest Instrumentation build in build/outputs/apk
    - ./gradlew assembleAndroidTest
    # Assemble the debug build in build/outputs/apk
    - ./gradlew assembleDebug

    # Run the device_farm_receive_server
    - node server.js:
        pwd:
          device_farm_receive_server

    # Run unit tests first (results will be collected at the last step)
#    - ./gradlew test -PdisablePreDex
    # Send hook to orchestrator to run the instrumentation tests

    # Create a mounted sd card to save android screenshots to (the custom CI emulator's sd card is read only)
#    - mksdcard -l e 512M mysdcard.img
    # start the emulator
#    - emulator -avd circleci-android22 -no-audio -no-window -sdcard mysdcard.img:
#        background: true
#        parallel: true
    # wait for it to have booted
#    - circle-android wait-for-boot
    # unlock the emulator screen
#    - sleep 15
#    - adb shell input keyevent 82
    # run all android tests using spoon against the emulator.
#    - ./gradlew spoon -PdisablePreDex:
#        timeout: 900

    # copy the build outputs and spoon to artifacts
#    - cp -r UoitDCLibraryBooking/build/outputs $CIRCLE_ARTIFACTS
#    - cp -r UoitDCLibraryBooking/build/spoon $CIRCLE_ARTIFACTS
    # copy the test results to the test results directory.
#    - cp -r UoitDCLibraryBooking/build/spoon/debug/junit-reports $CIRCLE_TEST_REPORTS/junit

notify:
  webhooks:
    # When build completes, send the Device Farm server the results
    #- url: http://api.uoitdclibrarybooking.objectivetruth.ca/circleci_build_webhook/run

