machine:
  node:
    version: 5.5.0
  java:
    version: openjdk8
  environment:
    ADB_INSTALL_TIMEOUT: "10"
    GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
  post:
    ## Creates a random introspective tunnel to the CircleCI container
    #- wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
    #- unzip ngrok-stable-linux-amd64.zip
    #- ./ngrok http -log $CIRCLE_ARTIFACTS/ngrok.log -log-level debug -log-format json 9292:
    #    background: true
    #- sleep 2
    ## Save the NGROK URL by using the API on the ngrok server and appending the desired callback url
    #- echo "$(curl 127.0.0.1:4040/api/tunnels | jq '.tunnels[0].public_url' -r)"/reply > UoitDCLibraryBooking/ngrok_url.txt

dependencies:
  override:
    #- npm install:
    #    pwd:
    #      device_farm_receive_server
    - ./gradlew
  pre:
    - if ! $(grep -q "Revision=25.1.7" $ANDROID_HOME/tools/source.properties); then echo y | android update sdk --no-ui --all --filter "tools"; fi
    - if ! $(grep -q "Pkg.Revision=33.0.0" $ANDROID_HOME/extras/android/m2repository/source.properties); then echo y | android update sdk --no-ui --all --filter "extra-android-m2repository"; fi
    - if ! $(grep -q "Pkg.Revision=29.0.0" $ANDROID_HOME/extras/google/m2repository/source.properties); then echo y | android update sdk --no-ui --all --filter "extra-google-m2repository"; fi
    - if ! $(grep -q "Pkg.Revision=31.0.0" $ANDROID_HOME/extras/google/google_play_services/source.properties); then echo y | android update sdk --no-ui --all --filter "extra-google-google_play_services"; fi
    - if ! $(grep -q "Revision=25.1.7" $ANDROID_HOME/tools/source.properties); then echo y | android update sdk --no-ui --all --filter "tools"; fi
    - if [ ! -e $ANDROID_HOME/build-tools/24.0.0 ]; then echo y | android update sdk --no-ui --all --filter "build-tools-24.0.0"; fi
    - if [ ! -e $ANDROID_HOME/platforms/android-24 ]; then echo y | android update sdk --no-ui --all --filter "android-24"; fi
  post:
    # Copy the standard debug keystore to the CI, ensuring all app have the same certificate
    - cp UoitDCLibraryBooking/debug.keystore ~/.android/
  cache_directories:
    - /usr/local/android-sdk-linux/tools
    - /usr/local/android-sdk-linux/build-tools/24.0.0
    - /usr/local/android-sdk-linux/platforms/android-24
    - /usr/local/android-sdk-linux/extras/android/m2repository
    - /usr/local/android-sdk-linux/extras/google/m2repository
    - /usr/local/android-sdk-linux/extras/google/google_play_services

test:
  override:
    # Assemble the AndroidTest Instrumentation build in build/outputs/apk
    # - ./gradlew assembleAndroidTest
    # Assemble the debug build in build/outputs/apk
    #- ./gradlew assembleDebug

    # Run the device_farm_receive_server and write the exit state to $DEVICE_FARM_RECEIVE_SERVER_RESPONSE
    # Needs to be written to a variable because failing any command will fail the build
    #- node server.js:
    #    pwd:
    #      device_farm_receive_server

    #- ./scripts/circle_ci_emulator_tests.sh:
    #    timeout: 900


    # NO DEVICE FARM
    # ==============
    - mksdcard -l e 512M mysdcard.img

    # Start the emulator
    - emulator -avd circleci-android22 -no-audio -no-window -sdcard mysdcard.img:
        background: true

    # Wait for it to have booted
    - circle-android wait-for-boot

    # Wait a moment before Unlocking the emulator screen
    - sleep 15
    - adb shell input keyevent 82

    - ./gradlew spoon:
        timeout: 900
    # Will be turned on for coverage reports once this is fixed:
    # https://github.com/kt3k/coveralls-gradle-plugin/issues/61
    #- ./gradlew coveralls:
    #    timeout: 900
    # ==============


    # Copy the build outputs and spoon to artifacts
    - cp -rv UoitDCLibraryBooking/build/outputs $CIRCLE_ARTIFACTS

    # copy the test results to the test results directory if any. (dont fail the build if they don't exist)
    - cp -rv UoitDCLibraryBooking/build/outputs/debug/junit-reports $CIRCLE_TEST_REPORTS/junit || true

notify:
  webhooks:
    # When build completes, send the Device Farm server the results so it can decide if a release is a good idea
    - url: https://2yfzoqajr9.execute-api.us-east-1.amazonaws.com/prod/circlecibuildfinishwebhook

