apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.github.triplet.play'

def versionMajor = "1"

buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.github.triplet.gradle:play-publisher:1.1.4'
    }
}

play {
    jsonFile = file('google_play_android_developer_api_keys.json')
    track = 'beta'
}

repositories {
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
}

def getVersionFromContinuousIntegrationEnvironment() {
    // Added to make sure it doesn't conflict with the old way of naming which was arbitrary. Now it follows the
    // Continious Integration Environment Build Number
    def buildNumberPrefix = 20000
    def circleCIBuildNumWithPrefix = buildNumberPrefix + (System.getenv("CIRCLE_BUILD_NUM") as Integer ?: 0)
    return circleCIBuildNumWithPrefix as Integer
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"


    defaultConfig {
        applicationId "com.objectivetruth.uoitlibrarybooking"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode getVersionFromContinuousIntegrationEnvironment()
        versionName versionMajor + "." + getVersionFromContinuousIntegrationEnvironment()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    signingConfigs {
        release {
            storeFile file("release_key.keystore")
            storePassword System.getenv("CI_RELEASE_KEYSTORE_PASSWORD")
            keyAlias System.getenv("CI_RELEASE_KEYSTORE_ALIAS")
            keyPassword System.getenv("CI_RELEASE_KEYSTORE_KEY_PASSWORD")
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.9.5"


    // Testing-only dependencies
    // Force usage of support annotations in the test app, since it is internally used by the runner module.
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support:support-annotations:23.2.1'
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.4.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'


    // App dependencies
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.jakewharton.timber:timber:3.1.0'
    compile 'com.github.eluleci:flatui:3.0.0'
    compile 'it.sephiroth.android.library.horizontallistview:hlistview:1.2.2'
    compile 'com.google.android.gms:play-services:8.4.0'
    compile 'com.squareup:otto:1.3.8'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.daimajia.easing:library:1.0.1@aar'
    compile 'com.daimajia.androidanimations:library:1.1.3@aar'
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.1@aar') {
        transitive = true;
    }
}
